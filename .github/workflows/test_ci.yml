name: UnitTest

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run jacocoTestReport
        run: ./gradlew jacocoTestReport
      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: .github/badges
          generate-branches-badge: false
          jacoco-csv-file: app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.csv
          generate-coverage-endpoint: true
          coverage-endpoint-filename: jacoco.json
      - name: PrintDir
        run: |
          ls .github/badges
      - name: PrintJson
        run: |
          cat .github/badges/jacoco.json
      - name: PrintDir2
        id: set_var
        run: |
          content=`cat .github/badges/jacoco.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"
       - name: PrintDir3
        run: |
            echo "${{fromJson(steps.set_var.outputs.packageJson).message}}"



      #- name: PrintJsonNode
      #  run: |
      #    echo "${{fromJson(.github/badges/jacoco.json).message}}"
        #run: |
        #  JSON=$(cat .github/badges/jacoco.json)
        #  echo "::set-output name=matrix::${JSON//'%'/'%25'}"