apply plugin: 'jacoco'

jacoco {
    setToolVersion("0.8.8")
    println("getToolVersion :${getToolVersion()}")// getToolVersion :0.8.7
}

/**
 * 生成针对JunitTest并生成Jacoco覆盖率报告
 * 支持Java和Kotlin代码
 */
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDevDebugUnitTest']) {
    reports {
        csv.required.set(false)
        xml.required.set(false)
        html.required.set(true)
    }

    def excludes = ['**/R.class', '**/BuildConfig.*', "**/DataBinderMapperImpl.*"]

    def debugTree = fileTree(
            dir: "${buildDir}/intermediates/javac/devDebug/classes",
            excludes: excludes)
    def kotlinDebugTree = fileTree(
            dir: "${buildDir}/tmp/kotlin-classes/devDebug",
            excludes: excludes)

    def mainSrc = "${project.projectDir}/src/main/java"
    //def exeDir = "${buildDir}/outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec"
    def exeDir = "${buildDir}/jacoco/testDevDebugUnitTest.exec"

    println(debugTree.dir)
    println(kotlinDebugTree.dir)
    println(mainSrc)
    println(exeDir)

    getClassDirectories().from = files(
            [debugTree], [kotlinDebugTree]
    )
    getSourceDirectories().from = files(
            [mainSrc]
    )
    getExecutionData().from = files(
            exeDir
    )
}