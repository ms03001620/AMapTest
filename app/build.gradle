plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
}

apply from: '../jacoco.gradle'
apply from: '../pgy.gradle'

def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(rootProject.file("keystore.properties")))

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.amaptest"
        minSdk 26
        targetSdk 33 //31 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86","x86_64"
        }


        setProperty("archivesBaseName", "SomeApp_" + "1.0.0")
    }

    //https://stackoverflow.com/questions/20562189/sign-apk-without-putting-keystore-info-in-build-gradle
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    flavorDimensions "version"
    productFlavors {
        dev {
            dimension "version"
            buildConfigField "String", "CHANNEL", "\"dev\""
        }
        google {
            dimension "version"
            buildConfigField "String", "CHANNEL", "\"google\""
        }
        techno {
            dimension "version"
            buildConfigField "String", "CHANNEL", "\"techno\""
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        // for android.util.Log not mocked
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }

    namespace 'com.example.amaptest'
}

dependencies {
    implementation project(':lib_base')
    implementation project(':lib_charging')

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'


    //testImplementation 'junit:junit:4.+'
    testImplementation 'org.json:json:20210307'
    testImplementation 'io.mockk:mockk:1.12.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'


    implementation fileTree(include: '*.jar', dir: 'libs')

    implementation 'com.amap.api:3dmap:9.8.3'
    implementation 'com.amap.api:search:9.7.0'


    implementation 'com.google.code.gson:gson:2.9.0'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.10'

    implementation "com.blankj:utilcodex:1.31.1"

    implementation "com.google.android.exoplayer:exoplayer-core:2.16.1"
    implementation "com.google.android.exoplayer:exoplayer-ui:2.16.1"
    implementation "com.jakewharton.timber:timber:5.0.1"
    implementation "androidx.palette:palette:1.0.0"

    implementation 'com.airbnb.android:lottie:6.3.0'
    
}